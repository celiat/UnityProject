// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnityProject.Data;

namespace UnityProject.Migrations
{
    [DbContext(typeof(CampaignContext))]
    partial class CampaignContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Unity.Models.Campaign", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("Unity.Models.Contributor", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Contributor");
                });

            modelBuilder.Entity("Unity.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TimelineID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TimelineID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("Unity.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignID")
                        .HasColumnType("int");

                    b.Property<string>("SitecoreProductID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudioEnterpriseProductID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudioOnlineProductID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CampaignID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Unity.Models.RelatedLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CampaignID");

                    b.ToTable("RelatedLink");
                });

            modelBuilder.Entity("Unity.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignID")
                        .HasColumnType("int");

                    b.Property<string>("RoleFunction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CampaignID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Unity.Models.Timeline", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OutletID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CampaignID");

                    b.ToTable("Timeline");
                });

            modelBuilder.Entity("Unity.Models.Url", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForwardUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OutletID")
                        .HasColumnType("int");

                    b.Property<int>("TimelineID")
                        .HasColumnType("int");

                    b.Property<string>("UrlString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CampaignID");

                    b.HasIndex("TimelineID");

                    b.ToTable("Url");
                });

            modelBuilder.Entity("Unity.Models.Contributor", b =>
                {
                    b.HasOne("Unity.Models.Role", "Role")
                        .WithOne("Contributor")
                        .HasForeignKey("Unity.Models.Contributor", "RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Unity.Models.Event", b =>
                {
                    b.HasOne("Unity.Models.Timeline", null)
                        .WithMany("Events")
                        .HasForeignKey("TimelineID");
                });

            modelBuilder.Entity("Unity.Models.Product", b =>
                {
                    b.HasOne("Unity.Models.Campaign", null)
                        .WithMany("Products")
                        .HasForeignKey("CampaignID");
                });

            modelBuilder.Entity("Unity.Models.RelatedLink", b =>
                {
                    b.HasOne("Unity.Models.Campaign", null)
                        .WithMany("RelatedLinks")
                        .HasForeignKey("CampaignID");
                });

            modelBuilder.Entity("Unity.Models.Role", b =>
                {
                    b.HasOne("Unity.Models.Campaign", null)
                        .WithMany("Roles")
                        .HasForeignKey("CampaignID");
                });

            modelBuilder.Entity("Unity.Models.Timeline", b =>
                {
                    b.HasOne("Unity.Models.Campaign", null)
                        .WithMany("Timelines")
                        .HasForeignKey("CampaignID");
                });

            modelBuilder.Entity("Unity.Models.Url", b =>
                {
                    b.HasOne("Unity.Models.Campaign", null)
                        .WithMany("Urls")
                        .HasForeignKey("CampaignID");

                    b.HasOne("Unity.Models.Timeline", "Timeline")
                        .WithMany()
                        .HasForeignKey("TimelineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
